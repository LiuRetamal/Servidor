Ejercicio 1:
    Escribe python que genere html. Dentro de carpeta imagen hay 20 imagenes.png.
    Usando un bucle sacar cada imagen dentro de un elemento div img. Cada div tiene atributo id con valores. 
    Cada img con atributo alt con valores.

Ejercicio 2:
    Funcion en py "concatenaVocales" recibe parametro con nombre letras
    lista = ["A","E","I","O","U","E"]; Es un list que contiene letras.
    Comprobar que tamaño de array es igual o menor q 5 y el contenido son solo las vocales en Mayusculas.
    Devolver letras concatenadas como string. Si falla alguna condicion, se devuelve string "error".

Ejercicio 3:
    preciosProductosID = {
    "CA132": 99.2,
    "CB231": 55.7,
    "CA332": 101.0,
    "CD563": 65.2,
    "CB838": 48.1
}

    El id del producto tiene que ser clave del array y el precio el value.
    Recorrer array con foreach para crear tabla HTML con cabecera identificador y precio en dos columnas.
    En la 1ª columnas los id, en la 2ª los precios. Añadir fila con total con la suma de precios.

Ejercicio 4:
    En "separaABC.py" se recibe el parámetro del formulario "texto". Se usan dos cookies, coki["empiezaABC"]=
    coki["otras"]; en la 1ª cookie se irán concatenando las palabras q empicen por ABC separadas por espacios en blanco y en la otra el resto.
    En caso de recibir cadena vacía, as dos cookies se reinician con cadena vacías.
    Otro python "muestraABC.py" genera HTML con contenido de las cookies con mensajes "Palabras que empiezan por ABC" y "Palabras que no empiezan con ABC"
        <form action="separaABC.py" method="get" >
            <input type="text" name="texto" />
            <input type="submit" value="enviar" />
        </form>

Ejercicio 5:
    Dos ficheros nombres.dat y notas.dat
        Alberto Maria Juan Isabel
        7 8 2 5
    HTMl
    <!DOCTYPE html>
    <html>
        <head>
            <title>Filtra desde fichero</title>
        </head>
        <body>
            <hr />
            <form action="notaCorte.py" method="get">
                Nota de corte: <input type="text" name="corte"/><br />
                <input type="submit" value="separa" />
            </form>
            <hr />
        </body>
    </html>

    Hacer py "notaCorte.py" que cree un fichero "salida.dat" de alumnos con nota igual o mayor que nota de corte del formulario(corte)
    Tiene que devolver un html con texto "filtro realizado"

Ejercicio 6:
    <!DOCTYPE html>
    <html>
        <head>
            <title>Préstamo de libros en base de datos</title>
        </head>
        <body>
            <hr />
            Insertar préstamo:<br />
            <form action="insertaBD.py" method="get">
                Nombre del Socio: <input type="text" name="socio"/><br />
                Título del libro: <input type="text" name="titulo"/><br />
                Autor del libro: <input type="text" name="autor"/><br />
                <input type="submit" value="Crear prestamo" />
            </form>
            <hr />
            Listado de préstamos: <br />
            <form action="listadoBD.py" method="get">
                <input type="submit" value="Listado prestamos" />
            </form>
            <hr />
        </body>
    </html>

    "insertaBD.py"
        Validar que se reciben las variables del formulario.
        Comprobar que si existe el socio en la tabla SOCIOS. si no existe el socio recibid, devuelve error "El socio no existe"
        Insertar libro en tabla libros con el id_socio del socio.
        Si se realiza el prestamo correctamente el mensaje de Libro prestado
    "listadoBD.py"
        Sacar de todos los socios la lista de libros prestados.